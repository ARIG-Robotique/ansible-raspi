---

- hosts: localhost

  vars:
    raspberry_pi_download:
      url: http://director.downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2019-04-09/2019-04-08-raspbian-stretch-lite.zip
      sha256: 03ec326d45c6eb6cef848cf9a1d6c7315a9410b49a276a6b28e67a40b11fdfcf

  vars_prompt:
    - name: sd_card_device
      prompt: SD Card device
      private: no

    - name: sd_card_partition_prefix
      prompt: SD Card prefixe de partition
      private: no

    - name: restore_img
      prompt: Restauration sur la SD Card
      default: True
      private: no

    - name: force_hdmi
      prompt: Configuration pour force la sortie HDMI
      default: False
      private: no

  tasks:
    - name: Inclusion des variables
      include_vars:
        file: vars/wifi.vault.yml

    - name: Création répertoire de download
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - .tmp
        - .mnt
        - .mnt/boot
        - .mnt/root

    - name: Contrôle téléchargement nécéssaire
      stat:
        path: ".tmp/{{ raspberry_pi_download.url | basename }}"
        checksum_algorithm: sha256
      register: raspberry_pi_info

    - name: Download image d'installation Raspberry PI
      get_url:
        url: "{{ raspberry_pi_download.url }}"
        dest: .tmp/
        checksum: "sha256:{{ raspberry_pi_download.sha256 }}"
      when: not raspberry_pi_info.stat.exists or raspberry_pi_info.stat.checksum != raspberry_pi_download.sha256

    - name: Contrôle unarchive déjà effectué
      stat:
        path: ".tmp/{{ raspberry_pi_download.url | basename | replace('.zip','.img') }}"
      register: unarchive_info

    - name: Unzip image Rapsberry PI
      unarchive:
        src: ".tmp/{{ raspberry_pi_download.url | basename }}"
        dest: .tmp/
      when: not unarchive_info.stat.exists

    - name: "Restore Image sur la SD Card {{ sd_card_device }}"
      command: "dd if=.tmp/{{ raspberry_pi_download.url | basename | replace('.zip','.img') }} of={{ sd_card_device }}"
      become: yes
      when: restore_img

    - name: Montage de la partition SD Card
      mount:
        boot: no
        src: "{{ sd_card_device }}{{ item.partition }}"
        path: "{{ item.path }}"
        fstype: "{{ item.fstype }}"
        state: mounted
      with_items:
        - partition: "{{ sd_card_partition_prefix }}1"
          path: .mnt/boot
          fstype: vfat
        - partition: "{{ sd_card_partition_prefix }}2"
          path: .mnt/root
          fstype: ext4
      become: yes

    - name: Templates de configuration
      template:
        src: "templates/{{ item }}"
        dest: ".mnt/{{ item }}"
      with_items:
        - boot/wpa_supplicant.conf
        - boot/ssh
        - root/etc/rc.local
        - root/etc/default/keyboard
      become: yes

    - name: Configuration HDMI
      replace:
        path: .mnt/boot/config.txt
        regexp: '^#(hdmi_force_hotplug|hdmi_drive)'
        replace: '\1'
      when: force_hdmi

    - name: Configuration SSH
      lineinfile:
        path: .mnt/root/etc/ssh/ssh_config
        line: "IPQoS cs0 cs0"
        state: present

    - name: Configuration BT
      lineinfile:
        path: .mnt/boot/config.txt
        line: "dtoverlay=pi3-disable-bt"
        state: present

    - name: Affichage de l'IP au démarrage
      file:
        path: .mnt/root/etc/rc.local
        mode: 0755
        owner: root
        group: root
      become: yes

    - name: Demontage de la partition SD Card
      mount:
        path: "{{ item }}"
        state: absent
      with_items:
        - .mnt/boot
        - .mnt/root
      become: yes
