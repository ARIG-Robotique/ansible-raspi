---

- name: Changement du mot de passe de l'utilisateur pi
  ansible.builtin.user:
    name: pi
    update_password: always
    password: "{{ lookup('password', 'credentials/' + inventory_hostname + ' encrypt=sha512_crypt') }}"

- name: Ajout des repositories APT complémentaire
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ arig_common_apt_repositories[ansible_distribution_release] }}"
  register: arig_common_repository_task

- name: Update si les repositories on changés
  block:
    - name: Update cache
      ansible.builtin.apt:
        update_cache: true

    - name: Dist upgrade
      ansible.builtin.apt:
        upgrade: dist

    - name: Reboot
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
  when: arig_common_repository_task.changed

- name: Installation des packages communs
  ansible.builtin.apt:
    name: "{{ arig_common_packages }}"

- name: Merge configuration
  ansible.builtin.set_fact:
    arig_common_raspberry_pi_config_merged: "{{ arig_common_raspberry_pi_config_default | combine(arig_common_raspberry_pi_config) }}"

- name: Get Raspberry Pi type
  ansible.builtin.command: raspi-config nonint get_pi_type
  register: arig_common_raspberrypi_type
  changed_when: false

- name: Get Raspberry Pi screen blanking
  ansible.builtin.command: raspi-config nonint get_blanking
  register: arig_common_raspberrypi_screen_blanking
  changed_when: false

- name: Get Raspberry Pi camera
  ansible.builtin.command: raspi-config nonint get_camera
  register: arig_common_raspberrypi_camera
  changed_when: false

- name: Get Raspberry Pi I2C
  ansible.builtin.command: raspi-config nonint get_i2c
  register: arig_common_raspberrypi_i2c
  changed_when: false

- name: Get Raspberry Pi VNC
  ansible.builtin.command: raspi-config nonint get_vnc
  register: arig_common_raspberrypi_vnc
  changed_when: false

- name: Show RaspberryPI info
  ansible.builtin.debug:
    msg:
      - "Type            : {{ arig_common_raspberrypi_type.stdout }} (1->PiOne, 2->PiTwo, 0->Others)"
      - "Screen Blanking : {{ arig_common_raspberrypi_screen_blanking.stdout }} (0->Enable, 1->Disabled)"
      - "Camera          : {{ arig_common_raspberrypi_camera.stdout }} (0->Enable, 1->Disabled)"
      - "I2C             : {{ arig_common_raspberrypi_i2c.stdout }} (0->Enable, 1->Disabled)"
      - "VNC             : {{ arig_common_raspberrypi_vnc.stdout }} (0->Enable, 1->Disabled)"

- name: Show RaspberryPI config requise
  ansible.builtin.debug:
    var: arig_common_raspberry_pi_config_merged

- name: Enable Screen Blanking
  ansible.builtin.command: raspi-config nonint do_blanking 0
  when: arig_common_raspberry_pi_config_merged.screen_blanking and arig_common_raspberrypi_screen_blanking.stdout != '0'

- name: Disable Screen Blanking
  ansible.builtin.command: raspi-config nonint do_blanking 1
  when: not arig_common_raspberry_pi_config_merged.screen_blanking and arig_common_raspberrypi_screen_blanking.stdout != '1'

- name: Enable Camera
  ansible.builtin.command: raspi-config nonint do_camera 0
  when: arig_common_raspberry_pi_config_merged.camera and arig_common_raspberrypi_camera.stdout != '0'

- name: Disable Camera
  ansible.builtin.command: raspi-config nonint do_camera 1
  when: not arig_common_raspberry_pi_config_merged.camera and arig_common_raspberrypi_camera.stdout != '1'

- name: Enable I2C
  ansible.builtin.command: raspi-config nonint do_i2c 0
  when: arig_common_raspberry_pi_config_merged.i2c and arig_common_raspberrypi_i2c.stdout != '0'

- name: Disable I2C
  ansible.builtin.command: raspi-config nonint do_i2c 1
  when: not arig_common_raspberry_pi_config_merged.i2c and arig_common_raspberrypi_i2c.stdout != '1'

- name: Enable VNC
  ansible.builtin.command: raspi-config nonint do_vnc 0
  when: arig_common_raspberry_pi_config_merged.vnc and arig_common_raspberrypi_vnc.stdout != '0'

- name: Disable VNC
  ansible.builtin.command: raspi-config nonint do_vnc 1
  when: not arig_common_raspberry_pi_config_merged.vnc and arig_common_raspberrypi_vnc.stdout != '1'

- name: Install I2C Tools
  ansible.builtin.apt:
    name: i2c-tools
    state: "{{ arig_common_raspberry_pi_config_merged.i2c | ternary('present', 'absent') }}"

- name: Ajout fichier de contrôle du SoC
  ansible.builtin.template:
    src: opt/bcmstat.py
    dest: /opt/bcmstat.py
    mode: 0755

- name: Ajout des paramètres du fichier /boot/config.txt
  ansible.builtin.lineinfile:
    line: "{{ item }}"
    dest: /boot/config.txt
    regexp: "^{{ item }}"
  loop: "{{ arig_common_raspberry_pi_boot_config }}"
  register: arig_common_raspberry_pi_boot_config_state

- name: Génération command line de boot
  ansible.builtin.template:
    src: boot/cmdline.txt
    dest: /boot/cmdline.txt
    mode: 0755
  when: arig_common_raspberry_pi_cmdline != 'undefined'
  register: arig_common_raspberry_pi_cmdline_state

- name: Install plymouth splash screen manager
  ansible.builtin.apt:
    name: "{{ item }}"
  loop:
    - plymouth
    - plymouth-themes
    - pix-plym-splash

- name: ARIG Plymouth theme directory
  ansible.builtin.file:
    path: "/usr/share/plymouth/themes/arig"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: ARIG Plymooth theme template files
  ansible.builtin.template:
    src: "usr/share/plymouth/themes/arig/{{ item.name }}"
    dest: "/usr/share/plymouth/themes/arig/{{ item.name }}"
    owner: root
    group: root
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - name: arig.plymouth
    - name: arig.script

- name: ARIG Plymooth theme raw files
  ansible.builtin.copy:
    src: "usr/share/plymouth/themes/arig/{{ item.name }}"
    dest: "/usr/share/plymouth/themes/arig/{{ item.name }}"
    owner: root
    group: root
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - name: boot_screen.png
    - name: boot_screen_reverse.png

- name: Reboot
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: whoami
  when: arig_common_raspberry_pi_boot_config_state.changed
        or arig_common_raspberry_pi_cmdline_state.changed

- name: Configuration pour QT
  block:
    - name: Build de packages pour QT
      ansible.builtin.apt:
        name: "{{ arig_common_qt_build }}"
        state: build-dep

    - name: Ajout des packages pour QT
      ansible.builtin.apt:
        name: "{{ arig_common_qt_packages }}"

    - name: Ajout des fonts pour QT
      ansible.builtin.apt:
        name: fonts-*
      when: ansible_distribution_release == "bullseye"

    - name: Création du répertoire de destination pour QT (cross compile)
      ansible.builtin.file:
        path: /usr/local/qt5.15
        state: directory
        mode: 0755

    - name: Ajout de l'utilisateur pi dans le group render (hardware acceleration)
      ansible.builtin.user:
        name: pi
        groups:
          - render
        state: present
        append: true

  when: arig_common_enable_qt

- name: Installation Java
  block:
    - name: Download archive Java
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "/opt/{{ item.url | basename }}"
        checksum: "sha1:{{ item.sha1 }}"
        owner: root
        group: root
        mode: 0644
      loop: "{{ arig_common_java_downloads }}"

    - name: Extract archive Java
      ansible.builtin.unarchive:
        src: "/opt/{{ item.url | basename }}"
        dest: /opt
        remote_src: true
      loop: "{{ arig_common_java_downloads }}"

    - name: Installation des outils pour le build de WiringPi
      ansible.builtin.apt:
        name: "{{ item }}"
      loop:
        - git-core
        - gcc
        - make

    - name: Clone repository WiringPi (unofficial)
      ansible.builtin.git:
        repo: https://github.com/WiringPi/WiringPi
        version: master
        single_branch: true
        dest: /opt/wiringpi

    - name: Compile and install WiringPi
      ansible.builtin.shell:
        chdir: /opt/wiringpi
        cmd: ./build > build.log
      args:
        creates: /usr/local/lib/libwiringPi.so

  when: arig_common_enable_java
